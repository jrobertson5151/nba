shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(.x)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA)))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA))) %>%
gather(key='location', value='total_shots', -Season) %>%
ggplot(aes(x=Season, y=percent, color=location)) +
geom_line()
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA))) %>%
gather(key='location', value='percent', -Season) %>%
ggplot(aes(x=Season, y=percent, color=location)) +
geom_line()
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA))) %>%
gather(key='location', value='percent', -Season) %>%
select(-percent_from_2P) %>%
ggplot(aes(x=Season, y=percent, color=location)) +
geom_line()
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA))) %>%
select(-percent_from_2P) %>%
gather(key='location', value='percent', -Season) %>%
ggplot(aes(x=Season, y=percent, color=location)) +
geom_line()
shooting_season
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA)) %>% group_by(Season) %>% summarise(across(starts_with('percent'), ~.*FGA))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA)) %>% group_by(Season)
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA)) %>% group_by(Season) %>% summarise(avg_distance = weighted.mean(avg_distance, FGA))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA)) %>% group_by(Season) %>% summarise(avg_distance = weighted.mean(avg_distance, FGA)) %>% ggplot(aes(x=Season, y=avg_distance)) + geom_point()
df2
shooting_career
highs
highs_career
highs_season
highs_season %>% View
playoffs_highs_career
playoffs_highs_career %>% arrange(desc(PTS))
playoffs_highs_career %>% arrange(desc(FGA))
playoffs_highs_season
playoffs_highs_season %>% arrange(desc(PTS))
playoffs_highs_career %>% arrange(desc(PTS))
playoffs_highs_career %>% filter(str_detect(Player, 'Jordan'))
save_table(processed_data_path, raw_data_path, 'highs')
source('~/Coding/nba2/data/raw2/parser.R')
save_table(processed_data_path, raw_data_path, 'highs')
all_player_ids <- players$player_id
save_table(processed_data_path, raw_data_path, 'highs')
save_table(processed_data_path, raw_data_path, 'playoffs_highs')
if(length(pi_nodes) == 0){
print(str_c('no ', table_name, ' for ', pi))
pi_table <- data.frame(player_id = c(pi))
}
get_table <- function(location, player_ids, table_name){
df <- NULL
for(pi in player_ids){
pi_nodes <- read_html(str_c(location, '/', pi, '.html')) %>%
html_nodes(str_c('table#', table_name))
if(length(pi_nodes) == 0){
print(str_c('no ', table_name, ' for ', pi))
pi_table <- data.frame(player_id = c(pi))
}
else {
print(str_c('found ', table_name, ' for ', pi))
pi_table <- pi_nodes[[1]] %>%
html_table()
if(str_detect(table_name, 'shooting')){
pi_table <- pi_table[3:nrow(pi_table),]
names(pi_table) <- shooting_cols
}
if(str_detect(table_name, 'pbp')){
pi_table <- pi_table[2:nrow(pi_table),]
names(pi_table) <- pbp_cols
}
if(str_detect(table_name, 'highs')){
names(pi_table) <- pi_table[1,] %>% as.character()
pi_table <- pi_table[2:nrow(pi_table),]
}
pi_table <- pi_table %>%
Filter(function(x)!all(is.na(x)), .)  %>%
mutate(player_id = pi) %>%
mutate_all(as.character)
df <- pi_table %>% bind_rows(df, .)
}
}
df <- df  %>% select(player_id, everything()) %>%
as_tibble()
if('Lg' %in% names(df)){
df <- filter(df, Lg == 'NBA' | Lg == '') %>% select(-Lg)
}
return(df)
}
get_table(raw_data_path, 'jordami01', 'year-and-career-highs')
get_table(raw_data_path, 'ervinju01', 'year-and-career-highs')
get_table(raw_data_path, 'ervinju01', 'year-and-career-highs')
get_table(raw_data_path, 'ervinju01', 'year-and-career-highs') %>% filter(FG == '')
get_table(raw_data_path, 'ervinju01', 'year-and-career-highs') %>% filter(FG != '')
source('~/Coding/nba2/data/raw2/parser.R')
get_table(raw_data_path, 'ervinju01', 'year-and-career-highs')
save_table(processed_data_path, raw_data_path, 'highs')
save_table(processed_data_path, raw_data_path, 'playoffs-highs')
source('~/Coding/nba2/data/raw2/parser.R')
save_table(processed_data_path, raw_data_path, 'playoffs-highs')
all_player_ids <- players$player_id
save_table(processed_data_path, raw_data_path, 'playoffs-highs')
save_table(processed_data_path, raw_data_path, 'playoffs_highs')
playoffs_highs_career %>% arrange(desc(PTS))
playoffs_highs_career %>% arrange(desc(GmSc))
playoffs_highs_career %>% arrange(desc(FGA))
playoffs_highs_career %>% arrange(desc(TRB))
playoffs_highs_career %>% arrange(desc(AST))
playoffs_highs_career %>% arrange(desc(FG))
playoffs_highs_career %>% arrange(desc(`3P`))
playoffs_highs_career %>% arrange(desc(`3PA`))
players
players %>% group_by(Player) %>% summarise(n())
players %>% group_by(Player) %>% summarise(n()) %>% arrange(desc(n))
players %>% group_by(Player) %>% summarise(n= n()) %>% arrange(desc(n))
playoffs_per_game_season
playoffs_per_game_career
playoffs_per_game_career %>% arrange(desc(`eFG%`))
playoffs_per_game_career %>% arrange(desc(`eFG%`)) %>% View
playoffs_per_game_career %>% arrange(desc(PTS/MP))
playoffs_per_game_career %>% filter(G > 20) %>% arrange(desc(`eFG%`))
playoffs_per_game_career %>% filter(G*FGA > 30) %>% arrange(desc(`eFG%`))
playoffs_per_game_career %>% filter(PTS/G > 30) %>% arrange(desc(`eFG%`))
playoffs_per_game_career %>% arrange(desc(PTS/G))
playoffs_per_game_career %>% arrange(desc(PTS/G)) %>% [1,]
playoffs_per_game_career %>% arrange(desc(PTS/G)) %>% [1,.]
playoffs_per_game_career %>% arrange(desc(PTS/G)) %>% .[1,]
playoffs_per_game_career %>% arrange(desc(PTS/G)) %>% .[1,] %>% c()
playoffs_per_game_career %>% filter(matches(Player, 'Michael Jordan'))
playoffs_per_game_career %>% filter(str_detect(Player, 'Michael Jordan'))
playoffs_per_game_career %>% filter(str_detect(Player, 'Michael Jordan')) %>% c()
playoffs_per_game_career %>% arrange(desc(PTS))
playoffs_per_game_career %>% arrange(desc(AST))
shooting_season %>% left_join(select(totals_season, player_id, Season, FGA, `2PA`, `3PA`), by=c('player_id', 'Season')) %>%
filter(!is.na(`percent_from_0-3`) & Season >= 2000) %>%
group_by(Season) %>%
summarise(across(`percent_from_2P`:`percent_from_3P`, ~sum(.x*FGA, rm.na = TRUE)/sum(FGA))) %>%
select(-percent_from_2P) %>%
gather(key='location', value='percent', -Season) %>%
ggplot(aes(x=Season, y=percent, color=location)) +
geom_line()
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(Player, season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(G = 1:n(), cum_3P = cumsum(`3P`), cum_3PA = cumsum(`3PA`)) %>%
mutate(total_G = max(G), total_3P = max(cum_3P), total_3PA = max(cum_3PA), total_3P_perc = total_3P/total_3PA) %>%
select(-From, -To)
df2
df <- only_totals(totals_season) %>% select(player_id,Season, `3P`:`3P%`) %>% group_by(player_id) %>%
mutate_at(vars(starts_with('3P')), list(to_date=rolling_sum)) %>% mutate(`3P%_to_date`=`3P_to_date`/`3PA_to_date`) %>%
mutate(last_season_perc = shift1(`3P%`)) %>% mutate(season_num = rank(Season), seasons_played=n()) %>%
mutate(`3P_per_season`=`3P_to_date`/(season_num-1), `3PA_per_season`=`3PA_to_date`/(season_num-1)) %>%
filter(`3PA_to_date` > 100)
df
source('~/Coding/nba2/src/R/threes.R')
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(Player, season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(G = 1:n(), cum_3P = cumsum(`3P`), cum_3PA = cumsum(`3PA`)) %>%
mutate(total_G = max(G), total_3P = max(cum_3P), total_3PA = max(cum_3PA), total_3P_perc = total_3P/total_3PA) %>%
select(-From, -To)
df2
threes_by_group(1992:2018, Opp)
source('~/Coding/nba2/src/R/distance.R')
threes_by_group(1992:2018, Opp)
threes_by_group(1992:2018, Season, Opp)
box_scores(1994)
threes_by_group(1992:2018, season, Opp)
?lm
lm(.Last.value, total_3PA ~ `3P%`)
threes_by_group(1992:2018, season, Opp)
threes_by_group(1992:2018, Season, Opp) %>% lm(total_3PA ~ `3P%`)
threes_by_group(1992:2018, season, Opp) %>% lm(total_3PA ~ `3P%`)
threes_by_group(1992:2018, season, Opp) %>% lm(total_3PA ~ `3P%`, .)
lm <- .Last.value
lm$coefficients
lm$residuals
library(rvest)
library(xml2)
library(RSelenium)
?read_html
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table()
?html_table
html_attr(/home/jim/Coding/nba2/data/raw2)
html_attr('/home/jim/Coding/nba2/data/raw2')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_attr()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_attr('id')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_attr('id')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes()
?html_nodes
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html')[[1]] %>% html_nodes()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_node('table')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') %>% length()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% hmtl_tables
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% hmtl_table
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') %>% length()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') %>% !is.an
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') %>% !is.na
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') %>% !is.na()
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id')
?html_attrs
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id')
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_nodes('table') %>% html_attr('id') -> ids
ids
ids != NA
is.na(ids)
!is.na(ids)
read_html('/home/jim/Coding/nba2/data/raw2/abdelal01.html') %>% html_table -> tables
tables[!is.na(ids)]
tables[!is.na(ids)]
ids[!is.na(ids)]
?write_csv
save_all_tables <- function(dest, html_str) {
ids <- html_nodes('table') %>% html_attr('id')
tables <- html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[.], str_c(dest, '/', ids[.])))
}
html_str <- read_html('/home/jim/Coding/nba2/data/raw2/jamesle01.html')
save_all_tables('.', html_str)
html_str
html_str <- read_html('/home/jim/Coding/nba2/data/raw2/jamesle01.html') %>% html_str
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[.], str_c(dest, '/', ids[.])))
}
save_all_tables('.', html_str)
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[.], str_c(dest, '/', ids[.], '.csv')))
}
debugSource('~/Coding/nba2/src/R/scraper2.R')
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[.], str_c(dest, '/', ids[.], '.csv')))
}
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[.], str_c(dest, '/', ids[.], '.csv')))
}
debugSource('~/Coding/nba2/src/R/scraper2.R')
debugSource('~/Coding/nba2/src/R/scraper2.R')
save_all_tables('.', html_str)
tables
ids
is.data.frame(tables)
map(tables, is.data.frame)
?map
tables[5]
save_all_tables('.', html_str)
map(1:length(ids), is.data.frame)
map(1:length(ids), is.data.frame(tables[.]))
map(1:length(ids), ~is.data.frame(tables[.]))
tables
class(tables)
class(tables[2])
class(tables[[2]])
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[[.]], str_c(dest, '/', ids[.], '.csv')))
}
q
save_all_tables('.', html_str)
save_all_tables <- function(dest, html_str) {
ids <- html_str %>% html_nodes('table') %>% html_attr('id')
tables <- html_str %>% html_table() %>% .[!is.na(ids)]
ids <- ids[!is.na(ids)]
map(1:length(ids), ~write_csv(tables[[.]], str_c(dest, '/', ids[[.]], '.csv')))
}
save_all_tables('.', html_str)
all_player_ids
ls
dir()
mkdir(test)
save_all_tables('./test', html_str)
source('~/Coding/nba2/src/R/build_tables.R')
source('./parser.R')
getwd()
source('parser.R')
source('parser.R', TRUE)
source('parser')
source(parser)
source("parser")
source("parser.R")
source("./parser.R")
source("~/Coding/nba2/src/R/parser.R")
source("~/Coding/nba2/src/R/parser.R")
source('~/Coding/nba2/data/raw2/parser.R')
source('~/Coding/nba2/data/raw2/parser.R')
source('~/Coding/nba2/data/raw2/parser.R')
source('~/Coding/nba2/data/raw2/parr.R')
source("~/Coding/nba2/src/R/parser.R")
source('~/Coding/nba2/src/R/parser.R')
getwd()
source('parser.R')
source('parser.R')
source('./parser.R')
source('./scraper2.R')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
raw_data_path <- str_c(data_path, '/raw')
data_path <- '../../data'
processed_data_path <- str_c(data_path, '/processed')
raw_data_path <- str_c(data_path, '/raw')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
'adwa' + 'bc'
dir.exists()
dir.exists('.')
dir.exists('awd')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
remDr$getPageSource()
remDr$getPageSource()[[1]]
remDr$getPageSource()[[1]] %>% read_html()
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
?file
dir()
dir(recursive = TRUE)
dir(raw_data_path, recursive=TRUE)
dir(players_data_path, recursive=TRUE)
dir(players_data_path, recursive=TRUE) %>% regex('advanced')
?regex
dir(players_data_path, recursive=TRUE) %>% str_detect('advanced')
dir(players_data_path, recursive=TRUE)
dir(players_data_path, recursive=TRUE) %>% str_detect('.csv')
dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('.csv')]
dir(players_data_path, recursive=TRUE)[!(dir(players_data_path, recursive=TRUE) %>% str_detect('.csv'))]
dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('.csv')]
dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('per_game.csv')]
fns <- dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('per_game.csv')]
'/'
'//'
'\'
''
''
fns
fns <- dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('/per_game.csv')]
fns
fns %>% split('/')
map_chr(fns, ~split('/')[[1]])
map_chr(fns, ~s plit('/')[[1]])
?map_chr
map_chr(fns, ~split('/')[[1]])
map_chr(fns, .f=~split('/')[[1]])
map_chr(fns, .f=~split('/')[[1]])
?split
map_chr(fns, ~split(., '/')[[1]])
map_chr(fns, .f=~split('/'))
map_chr(fns, .f=~split(., '/'))
map(fns, .f=~split(., '/'))
map(fns, .f=~split(., '//'))
map(fns, .f=~split(., '/'))
split('a/b', '/')
split('a/b', '//')
split('a//b', '//')
split('a/b', '/')
?str_split
map_chr(fns, .f=~str_split(., '/'))
map_chr(fns, .f=~str_split(., '/')[[1]])
map(fns, .f=~str_split(., '/'))
map(fns, .f=~str_split(., '/')[[1]])
map(fns, .f=~str_split(., '/')[[1]])
map_chr(fns, .f=~str_split(., '/'))
map_chr(fns, .f=~str_split(., '/'))
map(fns, .f=~str_split(., '/'))
map(fns, .f=~str_split(., '/')[[1]])
map(fns, .f=~str_split(., '/'))
str_split('a/b', '/')
str_split('a/b', '/') %>% class
str_split('a/b', '/') %>% [[1]]
str_split('a/b', '/') %>% .[[1]]
map(fns, .f=~str_split(., '/')[[1]])
map(fns, .f=~str_split(., '/')[[1]][[1]])
map_chr(fns, .f=~str_split(., '/')[[1]][[1]])
str_split(fns, '/')
str_split(fns, '/', simplify=TRUE)
str_split(fns, '/')
str_split(fns, '/')[[1]]
map_chr(str_split(fns, '/'), .[[1]])
map_chr(str_split(fns, '/'), ~.[[1]])
map_chr(str_split(fns, '/'), .[[1]])
map_chr(str_split(fns, '/'), ~.[[1]])
map_chr(str_split(fns, '/'), ~.[[1]]) -> pis
fns <- dir(players_data_path, recursive=TRUE)[dir(players_data_path, recursive=TRUE) %>% str_detect('/per_game.csv')]
fns
?write_csv
df <- read_csv('/home/jim/Coding/nba2/data/raw/players/jamesle01')
df <- read_csv('~/Coding/nba2/data/raw/players/jamesle01')
df <- read_csv('~/Coding/nba2/data/raw/players/jamesle01/shooting.csv')
df
?read_csv
source('~/Coding/nba2/src/R/build_tables.R')
source('~/Coding/nba2/src/R/build_tables.R')
t <- 'advanced'
t_season_filename <- str_c(processed_data_path, '/', t, '_season.csv')
t_career_filename <- str_c(processed_data_path, '/', t, '_career.csv')
t_files <- players_filenames[str_detect(players_filenames, str_c('/', t, '.csv'))]
#parse player data
players_filenames <- dir(players_data_path, recursive = TRUE)
players_filenames
t_files <- players_filenames[str_detect(players_filenames, str_c('/', t, '.csv'))]
t_files
players_with_t <-  t_files %>%
str_split('/') %>%
map_chr(~.[[1]])
players_with_T
players_with_t
big_df <- bind_rows(map(1:length(t_files),
~read_csv(t_files[.]) %>%
mutate(player_id = players_with_t[.])))
str_c(players_data_path, players_filenames)
t_files <- players_filenames[str_detect(players_filenames, str_c('/', t, '.csv'))] %>%
str_c(players_data_path, .)
t_files
players_with_t <-  t_files %>%
str_split('/') %>%
map_chr(~.[[1]])
players_with_t
players_with_t <-  t_files %>%
str_split('/') %>%
map_chr(~.[[6]])
players_with_t
big_df <- bind_rows(map(1:length(t_files),
~read_csv(t_files[.]) %>%
mutate(player_id = players_with_t[.])))
players_with_t
players_with_t %>% class
big_df
big_df <- bind_rows(map(1:length(t_files),
~read_csv(t_files[.]) %>%
mutate(player_id = players_with_t[.])))
big_df <- bind_rows(map(1:length(t_files),
~read_csv(t_files[.]))
)
a <- iris
a
a <- iris %>% .$player_id = 2
a <- (iris %>% .$player_id = 2)
iris$player_id = 2
iris
a
a$player_id = 2
a
big_df <- bind_rows(map(1:length(t_files),
~((a <- read_csv(t_files[.])); a$player_id = players_with_t[.]; a)))
big_df <- bind_rows(map(1:length(t_files),
~((a <- read_csv(t_files[.])); a$player_id = players_with_t[.]; a)))
player_file_read <- function(i) { a <- read_csv(t_files[i]); a$player_id = players_with_t[i]; a}
big_df <- bind_rows(map(1:length(t_files), player_file_read(.)))
big_df <- bind_rows(map(1:length(t_files), ~player_file_read(.)))
