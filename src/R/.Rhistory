||
?filter
filter(df, Home | is.na(Home))
filter(df, !Home)
threes_over_time(2000:2005, c('player_id', 'started'))
threes_over_season(2000:2005, c('player_id', 'started'))
threes_over_season(2000:2005, c('G', 'started'))
filter(df, is.na(started))
threes_by_group <- function(seasons, group_var = 'game_num') {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
if('month' %in% group_var){
df <- mutate(df, month=factor(month(Date, label=TRUE), levels=c('Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr')))
}
df <- df %>% group_by_at(vars(group_var)) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA)
return(df)
}
threes_by_group(2000:2010, c('player_id', 'season'))
threes_by_group(2000:2010, c(season', 'player_id'))
threes_by_group(2000:2010, c('season', 'player_id'))
df2 <- .Last.value
threes_by_group <- function(seasons, group_vars) {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquo(group_vars)
df <- df %>% group_by(!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group(2000:2004, G)
read_box_scores <- function(seasons){
bind_rows(map(seasons, ~read_delim(str_c(processed_data_path, '/box_scores/', .), delim='|',
col_types = 'ciiDcciiiiiiiiiiiiiiidillli')))
}
threes_by_group <- function(seasons, group_vars) {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquo(group_vars)
df <- df %>% group_by(!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group2 <- function(seasons, group_vars) {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquo(group_vars)
df <- df %>% group_by(!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group2(2000:2004, G)
threes_by_group2(2000:2004, G, month(Date))
threes_by_group2(2000:2004, G, Date)
threes_by_group2(2000:2004, Date)
threes_by_group2(2000:2004, (G, month(Date)))
threes_by_group2 <- function(seasons, ...) {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquos(group_vars)
df <- df %>% group_by(!!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group2(2000:2004, Date)
threes_by_group2 <- function(seasons, ...) {
df <- read_box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquos(...)
df <- df %>% group_by(!!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group2(2000:2004, Date)
threes_by_group2(2000:2004, Date, G)
threes_by_group2(2000:2004, month(Date), G)
library(lubridate)
read_box_scores <- function(seasons){
bind_rows(map(seasons, ~read_delim(str_c(processed_data_path, '/box_scores/', .), delim='|',
col_types = 'ciiDcciiiiiiiiiiiiiiidillli')))
}
box_scores <- function(seasons){
bind_rows(map(seasons, ~read_delim(str_c(processed_data_path, '/box_scores/', .), delim='|',
col_types = 'ciiDcciiiiiiiiiiiiiiidillli')))
}
threes_by_group2 <- function(seasons, ...) {
df <- box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquos(...)
df <- df %>% group_by(!!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
source('~/Coding/nba2/src/R/utility.R')
threes_by_group(2000:2004, month(Date), G)
threes_by_group <- function(seasons, ...) {
df <- box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquos(...)
df <- df %>% group_by(!!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group <- function(seasons, ...) {
df <- box_scores(seasons) %>% select(player_id, season, G, Date,Tm, Opp,`3P`, `3PA`, Home:game_num)
expr <- enquos(...)
df <- df %>% group_by(!!! expr) %>%
summarise(total_3PA = sum(`3PA`), total_3P = sum(`3P`)) %>%
mutate(`3P%`= total_3P/total_3PA) %>%
ungroup()
return(df)
}
threes_by_group(2000:2004, month(Date), G)
threes_by_group(2000:2004, month=month(Date), G)
threes_by_group(2000:2004, month=month(Date, label=TRUE
), G)
threes_by_group(2000:2004, month=month(Date, label=TRUE), G)
threes_by_group(2000:2010, player_id, season)
threes_by_group(2000:2010, player_id, season) %>% ggplot(aes(x=season, y=total_3P)) + geom_point()
threes_by_group(2000:2010, player_id, season) %>% ggplot(aes(x=season, y=total_3P)) + geom_point() +geom_line()
box_scores(2000:2010) %>% select(player_id, season, PTS)
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=std(PTS))
?sd
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS))
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean)
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(desc(normalizeD_sd))
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(desc(normalized_sd))
players
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd)
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50)
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% join(., select(players, player_id, Name))
players
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% join(., select(players, player_id, Player))
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% right_join(., select(players, player_id, Player))
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% left_join(., select(players, player_id, Player))
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% left_join(., select(players, player_id, Player)) -> .Last.value
box_scores(2000:2010) %>% select(player_id, season, PTS) %>% group_by(player_id, season) %>% summarize(mean=mean(PTS), n=n(), sd=sd(PTS), normalized_sd = sd/mean) %>% arrange(normalized_sd) %>% filter(n > 50) %>% left_join(., select(players, player_id, Player)) -> df
df
View(df)
df %>% arrange(desc(mean))
df %>% mutate(norm_sd2 = normalized_sd*sqrt(n))
df %>% mutate(norm_sd2 = normalized_sd*sqrt(n)) %>% arrange(desc(norm_sd2))
box_scores(2000:2010)
box_scores(2000:2010)
box_scores(2000:2010) %>% semi_join(players)
box_scores(2000:2010) %>% left_join(players)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P', From, To)
)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% cumsum()
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% arrange(Date)
?arrange
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% arrange(Date, by_group=TRUE)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id)
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% select(`3P`, `3PA`)
?cumsum
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% mutate(x=cumsum(`3P`))
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% mutate(cum_3P=cumsum(`3P`), cum_3PA = cumsum(`3PA`))
box_scores(2000:2010) %>% left_join(players) %>% select(player_id, G, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% mutate(cum_3P=cumsum(`3P`), cum_3PA = cumsum(`3PA`))
box_scores(2000:2010) %>% left_join(players) %>% select(season, player_id, G, Date, starts_with('3P'), From, To) %>% filter(From > 1999) %>% group_by(player_id) %>% mutate(cum_3P=cumsum(`3P`), cum_3PA = cumsum(`3PA`))
df
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999)
df2
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% arrange(player_id, season)
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% arrange(player_id, season) %>% left_join(players)
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(season) %>% cumsum()
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(season) %>% mutate(cum_games = cumsum(total_game))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(season) %>% mutate(cum_games = cumsum(total_games))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(cum_games = cumsum(total_games))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(cum_games = cumsum(total_games), r=rank())
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(cum_games = cumsum(total_games), r=rank(season))
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(cum_games = cumsum(total_games)-total_games)
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(prev_games = cumsum(total_games)-total_games)
df2
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(prev_games = cumsum(total_games)-total_games)
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(prev_games = cumsum(total_games)-total_games) %>% full_join(df2)
df2 %>% group_by(player_id, season) %>% summarise(total_games = max(G)) %>% group_by(player_id) %>% mutate(prev_games = cumsum(total_games)-total_games) %>% full_join(df2) %>% mutate(G = G+prev_games)
df2
df2 %>% group_by(player_id) %>% arrange(Date, .by_group = TRUE) %>% mutate(G = rank(Date))
?rank
df2 %>% group_by(player_id) %>% mutate(G = rank(Date))
df2 %>% group_by(player_id)
df2 %>% group_by(player_id) %>% mutate(true_G = 1)
df2 %>% group_by(player_id) %>% mutate(true_G = 1:n())
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(cum_G = 1:n())
df2
df2 %>% mutate(total_3P = cumsum(`3P`))
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(cum_G = 1:n(), total_3P = cumsum(`3P`), total_3PA = cumsum(`3PA`))
df2
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(total_G = 1:n(), total_3P = cumsum(`3P`), total_3PA = cumsum(`3PA`)) %>%
select(-From, -To, -G)
df2
df
df2
df2 %>% group_by(total_3PA)
df2 %>% group_by(total_3PA) %>% summarise(mean(total_3P))
df2 %>% group_by(total_3PA) %>% summarise(avg = mean(total_3P)) %>% ggplot() + geom_point(aes(x=total_3PA, y=avg))
df2
df2 %>% arrange(desc(total_3P))
df2 %>% arrange(desc(total_3PA))
df2 %>% arrange(desc(total_3PA)) %>% unique()
df2 %>% arrange(desc(total_3PA)) %>% .player_id %>% unique()
df2 %>% arrange(desc(total_3PA)) %>% .$player_id %>% unique()
players %>% filter(player_id == 'davisba01')
df2
df2 <- box_scores(2000:2010) %>% left_join(players) %>%
select(season, player_id, G, Date, starts_with('3P'), From, To) %>%
filter(From > 1999) %>%
group_by(player_id) %>%
mutate(cum_G = 1:n(), cum_3P = cumsum(`3P`), cum_3PA = cumsum(`3PA`)) %>%
mutate(total_G = max(cum_G), total_3P = max(cum_3P), total_3PA = max(cum_3PA)) %>%
select(-From, -To, -G)
df2
source('~/Coding/nba2/src/R/threes.R')
df2
abs
?abs
mutate(df2, diff_3P = abs(cum_3P-200), diff_3PA-600, diff_G-100)
totals_career %>% filter(player_id=='tatumja01')
mutate(df2, diff_3P = (cum_3P-200)^2 + cum_3PA-600, diff_G-100)
mutate(df2, diff = (cum_3P-388)^2 + (cum_3PA-973)^2)
mutate(df2, diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(desc(diff))
mutate(df2, diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff)
mutate(df2, diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff) %>% select(Player, total_3P_perc) %>% unique()
filter(df, G == 200) %>% mutate(diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff) %>% select(Player, total_3P_perc) %>% unique()
totals_career %>% filter(player_id=='tatumja01')
per_game_career
per_game_career %>% filter(player_id == 'tatumja01')
filter(df, G == 218) %>% mutate(diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff) %>% select(Player, total_3P_perc) %>% unique()
filter(df2, G == 218) %>% mutate(diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff) %>% select(Player, total_3P_perc) %>% unique()
filter(df2, G == 218) %>% mutate(diff = (cum_3P-388)^2 + (cum_3PA-973)^2) %>% arrange(diff) %>% select(Player, total_3P_perc, diff) %>% unique()
source('~/Coding/nba2/src/R/scraper.R')
build_box_scores(c(2011:2015, 2017, 2018, 1999:1980))
remDr$getPageSource()[[1]]
remDr$getPageSource()[[1]] %>% read_html
remDr$getPageSource()[[1]] %>% read_html %>% html_node('adawd')
remDr$getPageSource()[[1]] %>% read_html %>% html_node('adawd') %>% html_table
remDr$getPageSource()[[1]] %>% read_html %>% html_node('adawd') %>% class
source('~/Coding/nba2/src/R/scraper.R')
game_data('watsoea01', 2011)
source('~/Coding/nba2/src/R/scraper.R')
source('~/Coding/nba2/src/R/scraper.R')
game_data('watsoea01', 2011)
remDr$open()
game_data('watsoea01', 2011)
source('~/Coding/nba2/src/R/scraper.R')
build_box_scores(c(2011:2015, 2017, 2018, 1999:1980))
remDr$getCurrentUrl()
remDr$open()
remDr$getPageSource
remDr$getPageSource()
class(remDr$getPageSource())
game_data('watsoea01', 2011)
build_box_scores(c(2011:2015, 2017, 2018, 1999:1980))
source('~/Coding/nba2/src/R/scraper2.R')
build_box_scores(c(1999:1980))
remDr$close()
remDr$open()
build_box_scores(c(1999:1980))
remDr <- remoteDriver(port=4445L)
remDr$open()
remDr$open()
build_box_scores(c(1999:1980))
game_data <- function(player_ids=NULL, seasons=NULL) {
game_data_by_player <- function(player_id, season){
print(str_c('getting game data for ', player_id, ' in season ', seasons))
url <- str_c(bball_url, '/players/', substr(player_id, 1, 1), '/', player_id, '/gamelog/', season+1)
remDr$navigate(url)
i <- 0
while(try(remDr$getCurrentUrl()[[1]] != url)){
print(i)
print(url)
print(remDr$getCurrentUrl()[[1]])
Sys.sleep(1)
i <- i+1
}
df <- remDr$getPageSource()[[1]] %>% read_html() %>% html_node('table#pgl_basic')
df <- html_table(df)
df <- tibble(name_unnamed_cols(df)) %>% filter(G != '' & G != 'G')
secs_played <- as.integer(map_dbl(str_split(df$MP, ':'), ~ 60*as.integer(.[[1]])+as.integer(.[[2]])))
df <- type_convert(df, col_types=cols(GmSc=col_double(), Date=col_date(format='%Y-%m-%d'), MP=col_character())) %>%
mutate(secs_played = secs_played,
Home = (is.na(col_1) | col_1 != '@'),
Win = (str_detect(col_2, 'W')),
started = (GS == 1),
game_num = Rk,
season=season,
player_id=player_id
) %>%
select(-contains('%'), -contains('+/-'), -MP, -Age, -contains('col_'), -Rk, -GS) %>%
select(player_id, season, everything()) %>%
mutate_at(vars(FG:PTS), as.integer)
Sys.sleep(1)
return(df)
}
game_data_by_season <- function(player_ids=NULL, season){
if(is.null(player_ids))
return(bind_rows(map(players_in_season(season), ~ game_data_by_player(., season))))
else
return(bind_rows(map(intersect(players_in_season(season), player_ids), ~game_data_by_player(., season))))
}
if(!is.null(seasons))
return(bind_rows(map(seasons, ~game_data_by_season(player_ids, .))))
else
return(bind_rows(map(1960:2019, ~game_data_by_season(player_ids, .))))
}
game_data <- function(player_ids=NULL, seasons=NULL) {
game_data_by_player <- function(player_id, season){
print(str_c('getting game data for ', player_id, ' in season ', seasons))
url <- str_c(bball_url, '/players/', substr(player_id, 1, 1), '/', player_id, '/gamelog/', season+1)
remDr$navigate(url)
Sys.sleep(1)
i <- 0
while(try(remDr$getCurrentUrl()[[1]] != url)){
print(i)
print(url)
print(remDr$getCurrentUrl()[[1]])
Sys.sleep(1)
i <- i+1
}
df <- remDr$getPageSource()[[1]] %>% read_html() %>% html_node('table#pgl_basic')
df <- html_table(df)
df <- tibble(name_unnamed_cols(df)) %>% filter(G != '' & G != 'G')
secs_played <- as.integer(map_dbl(str_split(df$MP, ':'), ~ 60*as.integer(.[[1]])+as.integer(.[[2]])))
df <- type_convert(df, col_types=cols(GmSc=col_double(), Date=col_date(format='%Y-%m-%d'), MP=col_character())) %>%
mutate(secs_played = secs_played,
Home = (is.na(col_1) | col_1 != '@'),
Win = (str_detect(col_2, 'W')),
started = (GS == 1),
game_num = Rk,
season=season,
player_id=player_id
) %>%
select(-contains('%'), -contains('+/-'), -MP, -Age, -contains('col_'), -Rk, -GS) %>%
select(player_id, season, everything()) %>%
mutate_at(vars(FG:PTS), as.integer)
Sys.sleep(1)
return(df)
}
game_data_by_season <- function(player_ids=NULL, season){
if(is.null(player_ids))
return(bind_rows(map(players_in_season(season), ~ game_data_by_player(., season))))
else
return(bind_rows(map(intersect(players_in_season(season), player_ids), ~game_data_by_player(., season))))
}
if(!is.null(seasons))
return(bind_rows(map(seasons, ~game_data_by_season(player_ids, .))))
else
return(bind_rows(map(1960:2019, ~game_data_by_season(player_ids, .))))
}
build_box_scores(c(1999:1980))
build_box_scores(c(1999:1980))
remDr$open()
build_box_scores(c(1998:1980))
build_box_scores(c(1999:1980))
filter(players, str_detect(Player, 'thomp'))
players
filter(players, str_detect(Player, 'thomp'))
?str_detect
filter(players, str_detect(player_id, 'thomp'))
filter(players, str_detect(Player, 'Shaq')))
filter(players, str_detect(Player, 'Shaq'))
players <- read_delim(paste(data_path, 'processed2', 'player_list', sep='/'), '|', col_types = cols()) %>%
rename(College=Colleges)
players <- read_delim(paste(data_path, 'processed2', 'player_list', sep='/'), '|', col_types = 'cciiciiiidc')
players <- read_delim(paste(data_path, 'processed2', 'player_list', sep='/'), '|', col_types = 'cciiciiiiDc')
players
players <- read_delim(paste(data_path, 'processed2', 'player_list', sep='/'), '|', col_types = 'cciiciiiiDc') %>% arrange(player_id)
players
per_game_season
advanced_season
1923 %% 10
only_totals(advanced_season)
adv_df <- .Last.value
adv_df %>% mutate(decade = as.integer(str_split(Season, '-')[[1]]))
adv_df %>% mutate(decade= as.integer(Season[1:3]))
adv_df %>% mutate(decade= as.integer(substring(Season, 1, 3)))
adv_df %>% mutate(decade = 10*as.integer(substring(Season, 1, 3)))
adv_df <- adv_df %>% mutate(decade = 10*as.integer(substring(Season, 1, 3))) %>% select(player_id, decade, Season, WS)
adv_df
ggplot(adv_df, aes(x=decade, y=WS)) + geom_bar()
ggplot(adv_df, aes(x=WS)) + geom_bar() + facet_wrap(decade)
ggplot(adv_df, aes(x=WS)) + geom_bar() + facet_wrap(decade)
?facet_wrap
ggplot(adv_df, aes(x=WS)) + geom_bar() + facet_wrap(~decade)
adv_df
ggplot(adv_df, aes(x=WS, color=decade)) + geom_bar()
adv_df
?geom_bar
ggplot(adv_df, aes(x=WS, color=decade)) + geom_histogram()
filter(adv_df, is.na(WS))
filter(adv_df, is.na(WS)) %>% .$decade %>% unique
filter(adv_df, ~is.na(WS))
filter(adv_df, !is.na(WS))
adv_df
adv_df <- filter(adv_df, !is.na(WS))
adv_Df
adv_df
adv_df %>% ggplot(aes(x=WS, color=decade))
adv_df %>% ggplot(aes(x=WS, color=decade)) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density)) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density..)) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., position=dodge)) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., position='dodge')) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decadeposition='dodge')) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decade, position='dodge')) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decade, position='dodge')) + geom_histogram()
adv_df$decade
adv_df$decade %>% factor
adv_df %>% mutate(decade=factor(decade))
adv_df <- adv_df %>% mutate(decade=factor(decade))
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decade, position='dodge')) + geom_histogram()
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decade)) + geom_histogram(position='dodge')
adv_df %>% ggplot(aes(x=WS, y=..density.., color=decade)) + geom_histogram(bins=30, position='dodge')
adv_df %>% ggplot(aes(x=WS, color=decade)) + geom_density()
adv_Df
adv_df
adv_df %>% filter(decade == 1950 | decade == 2010) %>% ggplot(aes(x=WS, color=decade)) + geom_density()
adv_df <- adv_df %>% mutate(decade = 10*as.integer(substring(Season, 1, 3))) %>% select(player_id, decade, Season, WS)
10*1
class(10*1)
class(as.integer(10*1))
player_dist <- advanced_season %>% only_totals %>%
mutate(decade == as.factor(as.integer(10*as.integer(substring(Season, 1, 3))))) %>%
select()
player_dist <- advanced_season %>% only_totals %>%
mutate(decade = as.factor(as.integer(10*as.integer(substring(Season, 1, 3))))) %>%
select()
adv_df %>% filter(decade == 1950 | decade == 2010) %>% ggplot(aes(x=WS, color=decade)) + geom_density()
player_dist
player_dist <- advanced_season %>% only_totals %>%
mutate(decade = as.factor(as.integer(10*as.integer(substring(Season, 1, 3))))) %>%
select(everything())
player_dist
player_dist <- left_join(per_game_season, advanced_season) %>% only_totals %>%
mutate(decade = as.factor(as.integer(10*as.integer(substring(Season, 1, 3))))) %>%
select(player_id, Season, decade)
player_dist
player_dist <- left_join(per_game_season, advanced_season) %>% only_totals %>%
mutate(decade = as.factor(as.integer(10*as.integer(substring(Season, 1, 3))))) %>%
select(player_id, Season, decade, everything())
player_dist
?gganimate
??gganimate
player_dist
ggplot(player_dist, aes(x=MP, color=decade)) + geom_density()
filter(player_dist, is.na(MP))
ggplot(player_dist, aes(x=MP)) + geom_density()
ggplot(player_dist, aes(x=PTS)) + geom_density()
library(gganimate)
install.packages(gganimate)
install.packages('gganimate')
library(gganimate)
ggplot(player_dist, aes(x=PTS)) + geom_density()
ggplot(player_dist, aes(x=PTS)) + geom_density() + transition_states(Season, transition_length = 2, state_length=1)
ggplot(player_dist, aes(x=PTS)) + geom_density() + transition_states(Season, transition_length = 2, state_length=1)
?transition_states
library(transformr)
install.packages('transformr')
library(transformr)
install.packages('sf')
library('units')
install.library('units')
install.package('units')
install.packages('units')
install.packages('units')
install.packages('transformr')
install.packages('transformr')
ggplot(player_dist, aes(x=PTS)) + geom_density() + transition_states(Season, transition_length = 2, state_length=1)
ggplot(player_dist, aes(x=PTS)) + geom_density() + transition_states(Season, transition_length = 2, state_length=1)
anim <- ggplot(player_dist, aes(x=PTS)) + geom_density() + transition_states(Season, transition_length = 2, state_length=1)
anim
plot(anim)
anim <- ggplot(player_dist, aes(x=PTS)) + geom_density() + ggtitle('Season {Season}'}) + transition_states(Season, transition_length = 2, state_length=1)
anim <- ggplot(player_dist, aes(x=PTS)) + geom_density() + ggtitle('Season {Season}') + transition_states(Season, transition_length = 2, state_length=1)
plot(anim)
anim <- ggplot(player_dist, aes(x=PTS)) + geom_density() + ggtitle('Season {closest_state}') + transition_states(Season, transition_length = 2, state_length=1)
plot(anim)
install.packages('gifski')
install.packages('gifski', 'png')
install.packages('gifski')
View(pbp_career)
install.packages('png')
anim <- ggplot(player_dist, aes(x=PTS)) + geom_density() + ggtitle('Season {closest_state}') + transition_states(Season, transition_length = 2, state_length=1)
plot
plot(anim)
anim <- ggplot(player_dist, aes(x=MP, y=PTS)) + geom_point() + ggtitle('Season {closest_state}') + transition_states(Season, transition_length = 2, state_length=1)
plot(anim)
